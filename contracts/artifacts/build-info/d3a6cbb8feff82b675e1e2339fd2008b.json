{
	"id": "d3a6cbb8feff82b675e1e2339fd2008b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Math__libraries.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.8;\n\n// Library is used to organize code that can be reused in multiple places.\n// DRY - \"Don't repeat yourself\"\nimport \"contracts/SafeMath.sol\";\n\ncontract Math__libraries {\n    using SafeMath for uint256;\n    uint256 public value;\n\n    function calculate(uint _value1, uint _value2) public {\n        value = _value1.div(_value2);\n    }\n\n    // function addition(uint _value1, uint _value2) public {\n    //     value = SafeMath.add(_value1, _value2);\n    // }\n\n    // function subtraction(uint _value1, uint _value2) public {\n    //     value = SafeMath.sub(_value1, _value2);\n    // }\n\n    // function multiply(uint _value1, uint _value2) public {\n    //     value = SafeMath.mul(_value1, _value2);\n    // }\n}"
			},
			"contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.8;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Math__libraries.sol": {
				"Math__libraries": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_value2",
									"type": "uint256"
								}
							],
							"name": "calculate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "value",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Math__libraries.sol\":198:761  contract Math__libraries {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Math__libraries.sol\":198:761  contract Math__libraries {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3fa4f245\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8dfa4363\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Math__libraries.sol\":261:281  uint256 public value */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Math__libraries.sol\":288:387  function calculate(uint _value1, uint _value2) public {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Math__libraries.sol\":261:281  uint256 public value */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Math__libraries.sol\":288:387  function calculate(uint _value1, uint _value2) public {... */\n    tag_12:\n        /* \"contracts/Math__libraries.sol\":360:380  _value1.div(_value2) */\n      tag_14\n        /* \"contracts/Math__libraries.sol\":372:379  _value2 */\n      dup2\n        /* \"contracts/Math__libraries.sol\":360:367  _value1 */\n      dup4\n        /* \"contracts/Math__libraries.sol\":360:371  _value1.div */\n      tag_15\n      swap1\n        /* \"contracts/Math__libraries.sol\":360:380  _value1.div(_value2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_14:\n        /* \"contracts/Math__libraries.sol\":352:357  value */\n      0x00\n        /* \"contracts/Math__libraries.sol\":352:380  value = _value1.div(_value2) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Math__libraries.sol\":288:387  function calculate(uint _value1, uint _value2) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath.sol\":481:753  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_15:\n        /* \"contracts/SafeMath.sol\":539:546  uint256 */\n      0x00\n        /* \"contracts/SafeMath.sol\":747:748  b */\n      dup2\n        /* \"contracts/SafeMath.sol\":743:744  a */\n      dup4\n        /* \"contracts/SafeMath.sol\":743:748  a / b */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contracts/SafeMath.sol\":736:748  return a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath.sol\":481:753  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_19:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_20:\n        /* \"#utility.yul\":177:201   */\n      tag_31\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_19\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_33\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_20\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_22:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_24:\n        /* \"#utility.yul\":842:866   */\n      tag_38\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_19\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_39:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_25:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_41\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1516   */\n    tag_11:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1167:1169   */\n      0x40\n        /* \"#utility.yul\":1155:1164   */\n      dup4\n        /* \"#utility.yul\":1146:1153   */\n      dup6\n        /* \"#utility.yul\":1142:1165   */\n      sub\n        /* \"#utility.yul\":1138:1170   */\n      slt\n        /* \"#utility.yul\":1135:1254   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1173:1252   */\n      tag_44\n      tag_22\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1135:1254   */\n    tag_43:\n        /* \"#utility.yul\":1293:1294   */\n      0x00\n        /* \"#utility.yul\":1318:1371   */\n      tag_45\n        /* \"#utility.yul\":1363:1370   */\n      dup6\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1343:1352   */\n      dup7\n        /* \"#utility.yul\":1339:1361   */\n      add\n        /* \"#utility.yul\":1318:1371   */\n      tag_25\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1308:1371   */\n      swap3\n      pop\n        /* \"#utility.yul\":1264:1381   */\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1446:1499   */\n      tag_46\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1471:1480   */\n      dup7\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1446:1499   */\n      tag_25\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1436:1499   */\n      swap2\n      pop\n        /* \"#utility.yul\":1391:1509   */\n      pop\n        /* \"#utility.yul\":1042:1516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1702   */\n    tag_26:\n        /* \"#utility.yul\":1570:1647   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1560:1648   */\n      mstore\n        /* \"#utility.yul\":1667:1671   */\n      0x12\n        /* \"#utility.yul\":1664:1665   */\n      0x04\n        /* \"#utility.yul\":1657:1672   */\n      mstore\n        /* \"#utility.yul\":1691:1695   */\n      0x24\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1681:1696   */\n      revert\n        /* \"#utility.yul\":1894:2079   */\n    tag_18:\n        /* \"#utility.yul\":1934:1935   */\n      0x00\n        /* \"#utility.yul\":1951:1971   */\n      tag_50\n        /* \"#utility.yul\":1969:1970   */\n      dup3\n        /* \"#utility.yul\":1951:1971   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1946:1971   */\n      swap2\n      pop\n        /* \"#utility.yul\":1985:2005   */\n      tag_51\n        /* \"#utility.yul\":2003:2004   */\n      dup4\n        /* \"#utility.yul\":1985:2005   */\n      tag_19\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1980:2005   */\n      swap3\n      pop\n        /* \"#utility.yul\":2024:2025   */\n      dup3\n        /* \"#utility.yul\":2014:2049   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":2029:2047   */\n      tag_53\n      tag_26\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2014:2049   */\n    tag_52:\n        /* \"#utility.yul\":2071:2072   */\n      dup3\n        /* \"#utility.yul\":2068:2069   */\n      dup3\n        /* \"#utility.yul\":2064:2073   */\n      div\n        /* \"#utility.yul\":2059:2073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1894:2079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220498ef2e0345de99f31b0110fe5f5045a6d95de4d90635efaf954fd9e8916f89264736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633fa4f2451461003b5780638dfa436314610059575b600080fd5b610043610075565b60405161005091906100c7565b60405180910390f35b610073600480360381019061006e9190610113565b61007b565b005b60005481565b61008e818361009890919063ffffffff16565b6000819055505050565b600081836100a69190610182565b905092915050565b6000819050919050565b6100c1816100ae565b82525050565b60006020820190506100dc60008301846100b8565b92915050565b600080fd5b6100f0816100ae565b81146100fb57600080fd5b50565b60008135905061010d816100e7565b92915050565b6000806040838503121561012a576101296100e2565b5b6000610138858286016100fe565b9250506020610149858286016100fe565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061018d826100ae565b9150610198836100ae565b9250826101a8576101a7610153565b5b82820490509291505056fea2646970667358221220498ef2e0345de99f31b0110fe5f5045a6d95de4d90635efaf954fd9e8916f89264736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DFA4363 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8E DUP2 DUP4 PUSH2 0x98 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0xAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0 DUP2 PUSH2 0xAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D DUP2 PUSH2 0xE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0xE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0xFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0xFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18D DUP3 PUSH2 0xAE JUMP JUMPDEST SWAP2 POP PUSH2 0x198 DUP4 PUSH2 0xAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A8 JUMPI PUSH2 0x1A7 PUSH2 0x153 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP15 CALLCODE 0xE0 CALLVALUE 0x5D 0xE9 SWAP16 BALANCE 0xB0 GT 0xF 0xE5 CREATE2 DIV GAS PUSH14 0x95DE4D90635EFAF954FD9E8916F8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "198:563:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculate_22": {
									"entryPoint": 123,
									"id": 22,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_75": {
									"entryPoint": 152,
									"id": 75,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@value_7": {
									"entryPoint": 117,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2082:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:2"
															},
															"nodeType": "YulIf",
															"src": "822:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:2",
														"type": ""
													}
												],
												"src": "769:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:2",
														"type": ""
													}
												],
												"src": "897:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1125:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1171:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1173:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1167:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:32:2"
															},
															"nodeType": "YulIf",
															"src": "1135:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1264:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1279:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1283:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1308:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1343:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1354:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1318:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1308:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1391:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1406:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1410:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1436:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1471:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1446:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1436:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1118:6:2",
														"type": ""
													}
												],
												"src": "1042:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1550:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1560:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1691:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1681:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1522:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1756:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1746:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1853:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1874:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1877:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1867:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1708:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1936:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1946:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1969:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1951:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1946:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1980:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2003:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1985:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1980:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2027:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2029:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2029:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2029:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2024:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:9:2"
															},
															"nodeType": "YulIf",
															"src": "2014:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2059:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2068:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2071:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2064:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2059:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1925:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1928:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1934:1:2",
														"type": ""
													}
												],
												"src": "1894:185:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633fa4f2451461003b5780638dfa436314610059575b600080fd5b610043610075565b60405161005091906100c7565b60405180910390f35b610073600480360381019061006e9190610113565b61007b565b005b60005481565b61008e818361009890919063ffffffff16565b6000819055505050565b600081836100a69190610182565b905092915050565b6000819050919050565b6100c1816100ae565b82525050565b60006020820190506100dc60008301846100b8565b92915050565b600080fd5b6100f0816100ae565b81146100fb57600080fd5b50565b60008135905061010d816100e7565b92915050565b6000806040838503121561012a576101296100e2565b5b6000610138858286016100fe565b9250506020610149858286016100fe565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061018d826100ae565b9150610198836100ae565b9250826101a8576101a7610153565b5b82820490509291505056fea2646970667358221220498ef2e0345de99f31b0110fe5f5045a6d95de4d90635efaf954fd9e8916f89264736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8DFA4363 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x113 JUMP JUMPDEST PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8E DUP2 DUP4 PUSH2 0x98 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0xAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0 DUP2 PUSH2 0xAE JUMP JUMPDEST DUP2 EQ PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D DUP2 PUSH2 0xE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0xE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0xFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0xFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18D DUP3 PUSH2 0xAE JUMP JUMPDEST SWAP2 POP PUSH2 0x198 DUP4 PUSH2 0xAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A8 JUMPI PUSH2 0x1A7 PUSH2 0x153 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP15 CALLCODE 0xE0 CALLVALUE 0x5D 0xE9 SWAP16 BALANCE 0xB0 GT 0xF 0xE5 CREATE2 DIV GAS PUSH14 0x95DE4D90635EFAF954FD9E8916F8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "198:563:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;261:20;;;;:::o;288:99::-;360:20;372:7;360;:11;;:20;;;;:::i;:::-;352:5;:28;;;;288:99;;:::o;481:272:1:-;539:7;747:1;743;:5;;;;:::i;:::-;736:12;;481:272;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:180::-;1570:77;1567:1;1560:88;1667:4;1664:1;1657:15;1691:4;1688:1;1681:15;1894:185;1934:1;1951:20;1969:1;1951:20;:::i;:::-;1946:25;;1985:20;2003:1;1985:20;:::i;:::-;1980:25;;2024:1;2014:35;;2029:18;;:::i;:::-;2014:35;2071:1;2068;2064:9;2059:14;;1894:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "97800",
								"executionCost": "147",
								"totalCost": "97947"
							},
							"external": {
								"calculate(uint256,uint256)": "infinite",
								"value()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 198,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 761,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220498ef2e0345de99f31b0110fe5f5045a6d95de4d90635efaf954fd9e8916f89264736f6c63430008080033",
									".code": [
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "3FA4F245"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "8DFA4363"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 261,
											"end": 281,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 372,
											"end": 379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 360,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 360,
											"end": 371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 360,
											"end": 380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 360,
											"end": 380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 380,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 360,
											"end": 380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 352,
											"end": 380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 481,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 743,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 481,
											"end": 753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 481,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 481,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 481,
											"end": 753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1170,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1671,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1696,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1985,
											"end": 2005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1985,
											"end": 2005,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1985,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2005,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2014,
											"end": 2049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2029,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2049,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2014,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2069,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2073,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 2079,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculate(uint256,uint256)": "8dfa4363",
							"value()": "3fa4f245"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"calculate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Math__libraries.sol\":\"Math__libraries\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Math__libraries.sol\":{\"keccak256\":\"0x91663de32735dec16e2d4bc3e864ad83973e128ff3bba7986b228f7bb8616779\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c235378859389e74f7f5dc4e0624f82d2a85827b69e2d5a4e6b98e43672f209\",\"dweb:/ipfs/QmNnpR1N5Z5Ww2YC5iCXWXaEK59Lfog2xzuDNXZxiYUNjf\"]},\"contracts/SafeMath.sol\":{\"keccak256\":\"0x25b0375f417e6ad2bd1504a517c8126af9e68006491b7cbbe0fa1168389610b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cc5f526fdfdf8c0a33cf67bac521fbe85edfbd3b0b48694e4203fad15741aea\",\"dweb:/ipfs/Qme2iA4gwy4uZVoQ3eqUYAP11JDeGSWJcZ51QUtHK3Exwd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Math__libraries.sol:Math__libraries",
								"label": "value",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath.sol\":146:1162  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath.sol\":146:1162  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea29a8d8f0d69dd3f94ce0840e2c7f435ebf1a631b9aed51c8e3e23fb15a928564736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea29a8d8f0d69dd3f94ce0840e2c7f435ebf1a631b9aed51c8e3e23fb15a928564736f6c63430008080033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x29 0xA8 0xD8 CREATE 0xD6 SWAP14 0xD3 0xF9 0x4C 0xE0 DUP5 0xE 0x2C PUSH32 0x435EBF1A631B9AED51C8E3E23FB15A928564736F6C6343000808003300000000 ",
							"sourceMap": "146:1016:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea29a8d8f0d69dd3f94ce0840e2c7f435ebf1a631b9aed51c8e3e23fb15a928564736f6c63430008080033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x29 0xA8 0xD8 CREATE 0xD6 SWAP14 0xD3 0xF9 0x4C 0xE0 DUP5 0xE 0x2C PUSH32 0x435EBF1A631B9AED51C8E3E23FB15A928564736F6C6343000808003300000000 ",
							"sourceMap": "146:1016:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1162,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea29a8d8f0d69dd3f94ce0840e2c7f435ebf1a631b9aed51c8e3e23fb15a928564736f6c63430008080033",
									".code": [
										{
											"begin": 146,
											"end": 1162,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1162,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath.sol\":{\"keccak256\":\"0x25b0375f417e6ad2bd1504a517c8126af9e68006491b7cbbe0fa1168389610b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cc5f526fdfdf8c0a33cf67bac521fbe85edfbd3b0b48694e4203fad15741aea\",\"dweb:/ipfs/Qme2iA4gwy4uZVoQ3eqUYAP11JDeGSWJcZ51QUtHK3Exwd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Math__libraries.sol": {
				"ast": {
					"absolutePath": "contracts/Math__libraries.sol",
					"exportedSymbols": {
						"Math__libraries": [
							23
						],
						"SafeMath": [
							122
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "contracts/SafeMath.sol",
							"file": "contracts/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 123,
							"src": "164:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Math__libraries",
							"nameLocation": "207:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 122,
										"src": "235:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "229:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3fa4f245",
									"id": 7,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "276:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "261:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "342:45:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "352:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 17,
																"name": "_value2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "372:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 15,
																"name": "_value1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "360:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 75,
															"src": "360:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "360:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "352:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "352:28:0"
											}
										]
									},
									"functionSelector": "8dfa4363",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculate",
									"nameLocation": "297:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_value1",
												"nameLocation": "312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_value2",
												"nameLocation": "326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "321:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:28:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:0:0"
									},
									"scope": 23,
									"src": "288:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 24,
							"src": "198:563:0",
							"usedErrors": []
						}
					],
					"src": "32:729:0"
				},
				"id": 0
			},
			"contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							122
						]
					},
					"id": 123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "56:89:1",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "SafeMath",
							"nameLocation": "154:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "301:98:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "311:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "316:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "311:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "307:35:1",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "319:23:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "334:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 35,
															"id": 40,
															"nodeType": "Return",
															"src": "327:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "347:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 44,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "351:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 45,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "355:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "351:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "347:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "347:9:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "369:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 51,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "373:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "369:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 53,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "378:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "369:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "362:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "362:18:1"
											},
											{
												"expression": {
													"id": 57,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "393:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 35,
												"id": 58,
												"nodeType": "Return",
												"src": "386:8:1"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "168:61:1",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "241:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "253:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "245:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "264:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "256:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:22:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "298:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "290:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:11:1"
									},
									"scope": 122,
									"src": "232:167:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "548:205:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "743:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 71,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "747:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "743:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 69,
												"id": 73,
												"nodeType": "Return",
												"src": "736:12:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "403:75:1",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "490:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "502:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "494:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "513:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "505:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:22:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:9:1"
									},
									"scope": 122,
									"src": "481:272:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "932:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "945:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 87,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "950:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "945:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 85,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "938:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "938:14:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "965:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "969:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 84,
												"id": 94,
												"nodeType": "Return",
												"src": "958:12:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "757:105:1",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "874:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "886:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "878:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "897:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "889:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:22:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "923:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:9:1"
									},
									"scope": 122,
									"src": "865:110:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1106:54:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1112:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1116:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1120:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1116:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1112:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1112:9:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 113,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1134:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 114,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1139:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1134:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 112,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1127:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1127:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1127:14:1"
											},
											{
												"expression": {
													"id": 118,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "1154:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 105,
												"id": 119,
												"nodeType": "Return",
												"src": "1147:8:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "979:55:1",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1046:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1050:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1069:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1061:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:22:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1103:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1095:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:11:1"
									},
									"scope": 122,
									"src": "1037:123:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 123,
							"src": "146:1016:1",
							"usedErrors": []
						}
					],
					"src": "32:1130:1"
				},
				"id": 1
			}
		}
	}
}